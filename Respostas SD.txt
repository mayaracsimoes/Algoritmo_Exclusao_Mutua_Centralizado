1) O algoritmo de exclusão mútua centralizado utiliza um coordenador central para gerenciar o acesso a recursos compartilhados, garantindo que apenas um processo por vez possa acessar a seção crítica. Quando um processo deseja entrar na seção crítica, ele solicita permissão ao coordenador, que concede ou nega o acesso com base na disponibilidade do recurso. As vantagens incluem simplicidade de implementação e garantia de justiça, pois o coordenador pode gerenciar as requisições de forma ordenada. No entanto, as desvantagens são a dependência de um único ponto de falha (o coordenador), o que pode comprometer todo o sistema em caso de falha, e a possibilidade de se tornar um gargalo de desempenho, especialmente em sistemas com muitos processos ou alta carga de requisições.

2) Em anexo nesse arquivo

3) No algoritmo de Ring, o processo 3 inicia a eleição enviando uma mensagem de eleição para o próximo processo no anel (processo 0), contendo seu identificador (3). Cada processo subsequente (0, 1, 2) repassa a mensagem, adicionando seu próprio ID se for maior que os já listados. Quando a mensagem retorna ao processo 3, o processo com o maior ID (neste caso, 3) é eleito como o novo coordenador. Já no algoritmo de Bully, o processo 3 envia mensagens de eleição para todos os processos com IDs maiores (apenas o processo 4). Como o processo 4 não responde (por estar inativo), o processo 3 se declara coordenador após um timeout e notifica os demais processos (0, 1, 2). O Ring é mais simples e evita mensagens excessivas, enquanto o Bully prioriza processos com IDs maiores, mas pode gerar mais tráfego de mensagens.

4) O algoritmo de Bully e o algoritmo de Ring são usados para eleição de coordenador em sistemas distribuídos, mas têm abordagens distintas. No Bully, o processo que detecta a falha do coordenador envia mensagens de eleição para processos com IDs maiores, e o processo com o maior ID disponível se torna o novo coordenador. Isso garante que o processo mais "forte" assuma a liderança, mas pode gerar mais tráfego de mensagens, especialmente em sistemas grandes. Já no Ring, os processos formam um anel lógico, e a mensagem de eleição é repassada sequencialmente, coletando os IDs dos participantes até retornar ao iniciador, que elege o processo com o maior ID. O Ring é mais eficiente em termos de mensagens, mas depende da estrutura de anel e pode ser menos flexível em topologias dinâmicas. Ambos têm vantagens: o Bully é mais direto e robusto, enquanto o Ring é mais simples e econômico em comunicação. Após discutirmos essas diferenças, chegamos em um consenso de preferir o algoritmo de Bully porque ele elege o processo com o maior ID como coordenador, o que é útil em sistemas onde processos com IDs maiores têm mais capacidade. O Bully é direto ao lidar com falhas, garantindo que o processo mais "forte" assuma a liderança rapidamente. Apesar de gerar mais tráfego de mensagens que o Ring, sua lógica é simples e eficiente, especialmente em ambientes onde a confiabilidade do coordenador é crucial. Além disso, ele não depende de uma estrutura em anel, sendo mais flexível em topologias dinâmicas.

